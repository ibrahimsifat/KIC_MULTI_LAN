/* .nav_hover {
    position: relative;
    color: #000;
    text-decoration: none;
}

.nav_hover:hover {
    color: #000;
}

.nav_hover::before {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 3px;
    bottom: -1px;
    left: 0;
    background-color: #FFCF2F;
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.nav_hover:hover::before {
    color: #FFCF2F;
    transform: scaleX(1);
}

.nav_hover:hover {
    color: #FFCF2F;
} */

body {
    transition: all .4s ease-in-out;
}

.swing {
    animation: swing ease-in-out 1s infinite alternate;
    transform-origin: center -20px;
    float: left;
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);
}


/* .swing img {
    border: 5px solid #f8f8f8;
    display: block;
} */

.swing:after {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    border: 1px solid #999;
    top: -10px;
    left: 50%;
    z-index: 0;
    border-bottom: none;
    border-right: none;
    transform: rotate(45deg);
}


/* nail */


/* .swing:before {
    content: '';
    position: absolute;
    width: 5px;
    height: 5px;
    top: -14px;
    left: 54%;
    z-index: 5;
    border-radius: 50% 50%;
    background: #000;
} */

@keyframes swing {
    0% {
        transform: rotate(-12deg);
    }
    100% {
        transform: rotate(-8deg);
    }
}

.bgred {
    background: #e3336c;
}

.textred {
    color: #e3336c;
}

.monsterratFont {
    font-family: 'Montserrat', sans-serif;
}

.arabic-font-1 {
    font-family: 'Cairo', sans-serif;
}

.arabic-font-2 {
    font-family: 'Tajawal', sans-serif;
}

.visionbg {
    height: 500px;
}


/* footer */

.doted {
    border: 2px dotted black;
}

.footer-bg {
    background-image: url(./img/footerbg.png);
    background-repeat: no-repeat;
}

.facebookIcon {
    padding: 3px 9px;
}

.instagramIcon {
    padding: 3px 8px;
}

.back-to-top {
    z-index: 1000;
    position: fixed;
    bottom: 20px;
    right: 30px;
    color: white;
    cursor: pointer;
    border: none;
    border-radius: 10px;
}

.selected {
    /* color: #FFCF2F; */
    border-bottom: 3px solid #2D2D7D;
}


/* border animation  */

li:after {
    display: block;
    content: '';
    border-bottom: solid 3px #2D2D7D;
    transform: scaleX(0);
    transition: transform 250ms ease-in-out;
}

li:hover:after {
    transform: scaleX(1);
}


/* li.fromRight:after {
  transform-origin: 100% 50%;
} */

li.fromLeft:after {
    transform-origin: 0% 50%;
}


/* for image zoom  */

.item-zoom {
    position: relative;
    overflow: hidden;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

.item-zoom img {
    vertical-align: top;
    max-width: 100%;
    -moz-transition: all 0.3s;
    -webkit-transition: all 0.3s;
    transition: all 0.6s;
}

.item-zoom:hover img {
    -moz-transform: scale(1.1);
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
}

a {
    text-decoration: none;
    color: #000;
}

.btn-link:focus {
    outline: none;
    box-shadow: none;
}

.text-li {
    color: #2B3189;
}

li>ul {
    transform: translatex(100%) scale(0)
}

li:hover>ul {
    transform: translatex(101%) scale(1)
}

li>button svg {
    transform: rotate(-90deg)
}

li:hover>button svg {
    transform: rotate(-270deg)
}


/* Below styles fake what can be achieved with the tailwind config
   you need to add the group-hover variant to scale and define your custom
   min width style.
     See https://codesandbox.io/s/tailwindcss-multilevel-dropdown-y91j7?file=/index.html
     for implementation with config file
*/

.group:hover .group-hover\:scale-100 {
    transform: scale(1)
}

.group:hover .group-hover\:-rotate-180 {
    transform: rotate(180deg)
}

.scale-0 {
    transform: scale(0)
}

.min-w-32 {
    min-width: 8rem
}


/* imput nuderline animation */

.-z-1 {
    z-index: -1;
}

.origin-0 {
    transform-origin: 0%;
}

input:focus~label,
input:not(:placeholder-shown)~label,
textarea:focus~label,
textarea:not(:placeholder-shown)~label,
select:focus~label,
select:not([value='']):valid~label {
    /* @apply transform; scale-75; -translate-y-6; */
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-scale-x: 0.75;
    --tw-scale-y: 0.75;
    --tw-translate-y: -1.5rem;
}

input:focus~label,
select:focus~label {
    /* @apply text-black; left-0; */
    --tw-text-opacity: 1;
    color: rgba(0, 0, 0, var(--tw-text-opacity));
    left: 0px;
}